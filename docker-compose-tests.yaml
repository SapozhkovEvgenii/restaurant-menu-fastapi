version: '3.8'

services:

  test_db:
    container_name: test_db
    image: postgres:15.1-alpine
    volumes:
      - /var/lib/postgresql/data/
    restart: always
    environment:
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TEST_POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${TEST_POSTGRES_DB} -U ${TEST_POSTGRES_USER}" ]
      interval: 5s
      timeout: 20s
      retries: 100
    ports:
      - "5433:5432"
    expose:
      - 5432
    networks:
      - test_network
    depends_on:
      redis:
        condition: service_healthy
  web:
    container_name: web_fastapi_test
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code/
    env_file:
      - .env
    entrypoint: sh -c "pytest"
    networks:
      - test_network
    ports:
     - "8001:8000"
    depends_on:
      test_db:
        condition: service_healthy
      redis:
        condition: service_healthy
  redis:
    container_name: "redis"
    image: redis:latest
    expose:
      - 6379
    ports:
      - "6378:6379"
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 20

networks:
  test_network:
    name: test_nerwork
